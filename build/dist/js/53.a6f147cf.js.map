{"version":3,"file":"js/53.a6f147cf.js","mappings":"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","sources":["webpack://colors/./src/views/MeetingView/TeamView.vue","webpack://colors/./src/components/videochat/UserVideo_sub.vue","webpack://colors/./src/components/videochat/OnVideo_sub.vue","webpack://colors/src/components/videochat/OnVideo_sub.vue","webpack://colors/./src/components/videochat/OnVideo_sub.vue?3acf","webpack://colors/./src/components/videochat/OnVideo_sub.vue?1305","webpack://colors/src/components/videochat/UserVideo_sub.vue","webpack://colors/./src/components/videochat/UserVideo_sub.vue?ee8e","webpack://colors/./src/components/videochat/UserVideo_sub.vue?4e40","webpack://colors/./src/components/videochat/chatPanel.vue","webpack://colors/src/components/videochat/chatPanel.vue","webpack://colors/./src/components/videochat/chatPanel.vue?cfce","webpack://colors/./src/components/videochat/chatPanel.vue?65d4","webpack://colors/src/views/MeetingView/TeamView.vue","webpack://colors/./src/views/MeetingView/TeamView.vue?263f","webpack://colors/./src/views/MeetingView/TeamView.vue?3531"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"TeamMeeting\"},[_c('div',{staticClass:\"contents\"},[_c('div',{staticClass:\"camera\"},[_c('div',{staticClass:\"col-md-6\",attrs:{\"id\":\"main-video\"}},[_c('userVideo',{staticClass:\"webcam\",attrs:{\"id\":\"webcam\",\"stream-manager\":_vm.mainStreamManager},on:{\"changeStreamTrack\":_vm.changeStream}})],1),_c('div',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.myUserName))]),_c('div',{staticClass:\"buttons\"},[_c('customButton',{staticClass:\"mute\",class:{ muteActive: _vm.publishAudio },attrs:{\"btnText\":\"음소거\"},on:{\"click\":_vm.muteAudio}}),_c('customButton',{staticClass:\"videostop\",class:{ muteActive: _vm.publishVideo },attrs:{\"btnText\":\"비디오 중지\"},on:{\"click\":_vm.muteVideo}})],1),_c('div',{staticClass:\"anotherPerson\"},_vm._l((_vm.subscribers),function(sub){return _c('div',{key:sub.stream.connection.connectionId,staticClass:\"p_sub\"},[_c('UserVideo_sub',{key:sub.stream.connection.connectionId,staticClass:\"webcam_sub\",attrs:{\"stream-manager\":sub},nativeOn:{\"click\":function($event){return _vm.updateMainVideoStreamManager(sub)}}})],1)}),0)]),_c('div',{staticClass:\"rightPannelArea\"},[(_vm.isChatPanel)?_c('div',{staticClass:\"chatPanelArea\"},[_c('Chatpanel',{on:{\"sendMessage\":_vm.sendMessage}})],1):_vm._e(),(!_vm.isChatPanel)?_c('div',{staticClass:\"rightSidebar\"},[_vm._m(0),_c('colorpallete',{staticClass:\"pallete\"}),_c('div',{staticClass:\"selectColor\"},[_c('colorchoice',{on:{\"changeColor\":_vm.changeColor}})],1),_c('customButton',{ref:\"colorchoice\",staticClass:\"selectColorbtn\",attrs:{\"btnText\":\"색상 팔레트에 담기\"},on:{\"click\":_vm.showOneSelectedColor}}),_c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(_vm._s(_vm.roomHeaderTitle))]),_c('hr')]),_c('h2',{staticClass:\"code\"},[_vm._v(_vm._s(_vm.roomHeaderData))]),_c('customButton',{staticClass:\"btn\",attrs:{\"btnText\":\"채팅\"},on:{\"click\":_vm.toggleChatPanel}}),_c('customButton',{staticClass:\"btn\",class:{ muteActive: !_vm.ready },attrs:{\"btnText\":\"투표하기\"},on:{\"click\":_vm.sendVote}}),(_vm.ishostCopy & _vm.readyAll)?_c('customButton',{staticClass:\"btn\",attrs:{\"btnText\":\"투표 시작\"},on:{\"click\":_vm.startSaving}}):_vm._e(),(_vm.ishost)?_c('customButton',{staticClass:\"btn\",attrs:{\"btnText\":\"시작\"},on:{\"click\":_vm.start}}):_vm._e(),(!_vm.ishost)?_c('customButton',{staticClass:\"btn\",attrs:{\"btnText\":\"종료\"},on:{\"click\":_vm.leaveMeeting}}):_vm._e(),_c('custom-modal',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showstartModal),expression:\"showstartModal\"}],staticClass:\"startInfoModal\",attrs:{\"id\":\"startInfoModal\",\"titleText\":\"호스트 공지사항\"},on:{\"close-modal\":function($event){_vm.showstartModal = false}}},[_c('content',[_c('div',{staticClass:\"content\"},[_c('p',{staticClass:\"notice\"},[_vm._v(\"참여자들의 입장이 완료되면 반드시 \"),_c('strong',{staticStyle:{\"font-size\":\"24px\"},attrs:{\"id\":\"notice\"}},[_vm._v(\"시작\")]),_vm._v(\" 버튼을 눌러주세요.\")]),_c('p',{staticClass:\"notice\"},[_vm._v(\"시작을 눌러야 미팅 중 다른 참여자들의 입장을 막을 수 있습니다.\")])]),_c('customButton',{staticClass:\"btn\",attrs:{\"btnText\":\"확인\"},on:{\"click\":function($event){_vm.showstartModal = false}}})],1)])],1):_vm._e()])]),(_vm.show_loadingimg)?_c('loadingImg',{attrs:{\"loadingText\":_vm.loadingText}}):_vm._e()],1)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"title\"},[_c('h3',[_vm._v(\"나만의 색상 팔레트\")]),_c('hr')])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.streamManager)?_c('div',[_c('ov-video',{attrs:{\"stream-manager\":_vm.streamManager}}),_c('div',{staticClass:\"name\"},[_vm._v(_vm._s(_vm.clientData))])],1):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('video',{attrs:{\"autoplay\":\"\"}})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <video autoplay />\n</template>\n\n<script>\nexport default {\n  name: \"OvVideo\",\n\n  props: {\n    streamManager: Object,\n  },\n\n  mounted() {\n    this.streamManager.addVideoElement(this.$el);\n  },\n};\n</script>\n\n<style scoped>\n/* our */\nvideo {\n  width: 100%;\n  border-radius: 10px;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OnVideo_sub.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./OnVideo_sub.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./OnVideo_sub.vue?vue&type=template&id=36c39b90&scoped=true&\"\nimport script from \"./OnVideo_sub.vue?vue&type=script&lang=js&\"\nexport * from \"./OnVideo_sub.vue?vue&type=script&lang=js&\"\nimport style0 from \"./OnVideo_sub.vue?vue&type=style&index=0&id=36c39b90&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"36c39b90\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div v-if=\"streamManager\">\n    <ov-video :stream-manager=\"streamManager\" />\n    <div class=\"name\">{{ clientData }}</div>\n  </div>\n</template>\n\n<script>\nimport OvVideo from \"./OnVideo_sub.vue\";\n\nexport default {\n  name: \"UserVideo\",\n\n  components: {\n    OvVideo,\n  },\n\n  props: {\n    streamManager: Object,\n  },\n\n  computed: {\n    clientData() {\n      const { clientData } = this.getConnectionData();\n      return clientData;\n    },\n  },\n\n  methods: {\n    getConnectionData() {\n      const { connection } = this.streamManager.stream;\n      return JSON.parse(connection.data);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.name {\n  margin-top: 3px;\n  color: #434485;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserVideo_sub.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./UserVideo_sub.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserVideo_sub.vue?vue&type=template&id=bc1f144c&scoped=true&\"\nimport script from \"./UserVideo_sub.vue?vue&type=script&lang=js&\"\nexport * from \"./UserVideo_sub.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserVideo_sub.vue?vue&type=style&index=0&id=bc1f144c&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bc1f144c\",\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"chat-panel\"},[_c('div',{staticClass:\"chat-box\"},[_c('div',{staticClass:\"header\"},[_c('span',{staticClass:\"title\"},[_vm._v(\" 채팅 \")]),_c('button',{staticClass:\"btn close-btn\",on:{\"click\":_vm.toggleChatPanel}},[_c('i',{staticClass:\"fas fa-times\"})])]),_c('div',{attrs:{\"id\":\"chat-area\"}},_vm._l((_vm.messages),function(message,i){return _c('div',{key:i,staticClass:\"message\"},[_c('div',{staticClass:\"message-title\"},[_c('span',{staticClass:\"message-header\"},[_vm._v(_vm._s(message.sender)+\" :\")])]),_c('div',{staticClass:\"messgeText\"},[_vm._v(\" \"+_vm._s(message.message)+\" \")])])}),0),_c('div',{staticClass:\"footer\"},[_c('div',{staticClass:\"messageInputBox\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.message),expression:\"message\"}],staticClass:\"text-box\",domProps:{\"value\":(_vm.message)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.clickSendMessage.apply(null, arguments)},\"input\":function($event){if($event.target.composing)return;_vm.message=$event.target.value}}})]),_c('div',{staticClass:\"messageSendButton\"},[_c('button',{staticClass:\"send-btn\",on:{\"click\":_vm.clickSendMessage}},[_c('i',{staticClass:\"fas fa-paper-plane airPlaneIcon\"})])])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"chat-panel\">\n    <div class=\"chat-box\">\n      <div class=\"header\">\n        <span class=\"title\"> 채팅 </span>\n        <button class=\"btn close-btn\" @click=\"toggleChatPanel\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n      <!-- 채팅 내역 -->\n      <div id=\"chat-area\">\n        <div class=\"message\" v-for=\"(message, i) of messages\" :key=\"i\">\n          <div class=\"message-title\">\n            <span class=\"message-header\">{{ message.sender }} :</span>\n          </div>\n          <div class=\"messgeText\">\n            {{ message.message }}\n          </div>\n        </div>\n      </div>\n      <div class=\"footer\">\n        <!-- display flex에 col값 할당해주기 -->\n        <div class=\"messageInputBox\">\n          <input class=\"text-box\" v-model=\"message\" @keyup.enter=\"clickSendMessage\" />\n        </div>\n        <div class=\"messageSendButton\">\n          <button class=\"send-btn\" @click=\"clickSendMessage\">\n            <i class=\"fas fa-paper-plane airPlaneIcon\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nexport default {\n  name: \"ChatPanel\",\n  data() {\n    return {\n      message: \"\",\n      chatHeight: \"100vh\",\n    };\n  },\n  watch: {\n    messages() {\n      setTimeout(() => {\n        var chatDiv = document.getElementById(\"chatpanelArea\");\n        chatDiv.scrollTo({\n          top: chatDiv.scrollHeight - chatDiv.clientHeight,\n          behavior: \"smooth\",\n        });\n      }, 50);\n    },\n  },\n  computed: {\n    messages() {\n      return this.$store.getters.messages;\n    },\n  },\n  methods: {\n    ...mapActions([\"toggleChatPanel\"]),\n    clickSendMessage() {\n      if (this.message.trim()) {\n        this.$emit(\"sendMessage\", this.message);\n        this.message = \"\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.chat-box {\n  height: 100%;\n  /* padding: 2px; */\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: space-around;\n  font: 18px \"pretendard\";\n}\n\n.header {\n  position: relative;\n  text-align: left;\n}\n\n.close-btn {\n  position: absolute;\n  color: #d0d1ff;\n  top: 3px;\n  right: 10px;\n}\n\n.text-box {\n  background-color: #ffffff;\n  width: 90%;\n  height: 100%;\n  border: 1px solid #d0d1ff;\n  border-radius: 10px;\n  color: #4a4d74;\n  font: 20px \"Pretendard Bold\";\n}\n\n.text-box:focus {\n  outline: none;\n}\n\n.title {\n  padding-left: 5%;\n  font: 24px \"Pretendard ExtraBold\";\n  color: #6667ab;\n}\n.title:after {\n  content: \"\";\n  width: 100%;\n  display: block;\n  position: absolute;\n  /* margin-top: 50px; */\n  border-bottom: 5px solid #d0d1ff;\n}\n\n.header {\n  width: 100%;\n  height: 4vh;\n  text-align: left;\n  margin-top: 10px;\n  color: #6667ab;\n}\n\n.message-header {\n  font: 15px \"pretendard\";\n  margin-right: 8px;\n  flex-wrap: nowrap;\n  flex-grow: 3;\n}\n\n.messageText {\n  margin-left: 3px;\n  flex-wrap: wrap;\n  flex-grow: 8;\n}\n\n.message {\n  margin-top: 3%;\n  text-align: left;\n  color: #6667ab;\n  display: flex;\n  margin-left: 5px;\n}\n\n.send-btn {\n  color: #b0a2c8;\n  background-color: #d0d1ff;\n  height: 100%;\n  width: 100%;\n  border-radius: 5px;\n  border: 1px solid #d0d1ff;\n  margin: 2px 0;\n  padding: 1px 6px;\n}\n.airPlaneIcon {\n  font-size: 30px;\n}\n.send-btn:hover {\n  color: #6667ab;\n}\n\n.footer {\n  display: flex;\n  margin-top: auto;\n  align-items: center;\n  margin-bottom: 2%;\n  font: 18px \"pretendard\";\n}\n\n.messageInputBox {\n  flex-grow: 10;\n  padding: 1% 0;\n  height: 50px;\n}\n.messageSendButton {\n  flex-grow: 2;\n  padding: 0;\n  height: 100%;\n}\n\n#chat-area {\n  overflow-y: auto;\n  height: 85%;\n}\n\n#chat-area::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n#chat-area::-webkit-scrollbar-track {\n  background: #37474f;\n}\n\n#chat-area::-webkit-scrollbar-corner {\n  background: #37474f;\n}\n\n#chat-area::-webkit-scrollbar-thumb {\n  background: #b0a2c8;\n}\n\n#chat-area::-webkit-scrollbar-button {\n  background-color: #37474f;\n  height: 0;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chatPanel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./chatPanel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./chatPanel.vue?vue&type=template&id=77a7c251&scoped=true&\"\nimport script from \"./chatPanel.vue?vue&type=script&lang=js&\"\nexport * from \"./chatPanel.vue?vue&type=script&lang=js&\"\nimport style0 from \"./chatPanel.vue?vue&type=style&index=0&id=77a7c251&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"77a7c251\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"TeamMeeting\">\n    <div class=\"contents\">\n      <div class=\"camera\">\n        <div id=\"main-video\" class=\"col-md-6\">\n          <userVideo class=\"webcam\" id=\"webcam\" :stream-manager=\"mainStreamManager\" @changeStreamTrack=\"changeStream\"></userVideo>\n        </div>\n        <div class=\"name\">{{ myUserName }}</div>\n        <div class=\"buttons\">\n          <customButton class=\"mute\" :class=\"{ muteActive: publishAudio }\" btnText=\"음소거\" @click=\"muteAudio\"></customButton>\n          <customButton class=\"videostop\" :class=\"{ muteActive: publishVideo }\" btnText=\"비디오 중지\" @click=\"muteVideo\"></customButton>\n        </div>\n\n        <div class=\"anotherPerson\">\n          <div class=\"p_sub\" v-for=\"sub in subscribers\" :key=\"sub.stream.connection.connectionId\">\n            <UserVideo_sub class=\"webcam_sub\" :key=\"sub.stream.connection.connectionId\" :stream-manager=\"sub\" @click.native=\"updateMainVideoStreamManager(sub)\"></UserVideo_sub>\n          </div>\n        </div>\n      </div>\n      <div class=\"rightPannelArea\">\n        <div class=\"chatPanelArea\" v-if=\"isChatPanel\">\n          <Chatpanel @sendMessage=\"sendMessage\" />\n        </div>\n        <div class=\"rightSidebar\" v-if=\"!isChatPanel\">\n          <div class=\"title\">\n            <h3>나만의 색상 팔레트</h3>\n            <hr />\n          </div>\n          <colorpallete class=\"pallete\"></colorpallete>\n          <div class=\"selectColor\">\n            <colorchoice @changeColor=\"changeColor\"></colorchoice>\n          </div>\n          <customButton class=\"selectColorbtn\" btnText=\"색상 팔레트에 담기\" ref=\"colorchoice\" @click=\"showOneSelectedColor\"></customButton>\n          <div class=\"title\">\n            <h3>{{ roomHeaderTitle }}</h3>\n            <hr />\n          </div>\n          <h2 class=\"code\">{{ roomHeaderData }}</h2>\n          <customButton class=\"btn\" btnText=\"채팅\" @click=\"toggleChatPanel\"></customButton>\n          <!-- <customButton class=\"btn\" btnText=\"투표하기\" @click=\"goVote\"></customButton> -->\n          <customButton class=\"btn\" :class=\"{ muteActive: !ready }\" btnText=\"투표하기\" @click=\"sendVote\"></customButton>\n          <customButton class=\"btn\" btnText=\"투표 시작\" v-if=\"ishostCopy & readyAll\" @click=\"startSaving\"></customButton>\n          <customButton class=\"btn\" btnText=\"시작\" v-if=\"ishost\" @click=\"start\"></customButton>\n          <customButton class=\"btn\" btnText=\"종료\" v-if=\"!ishost\" @click=\"leaveMeeting\"></customButton>\n          <custom-modal class=\"startInfoModal\" id=\"startInfoModal\" v-show=\"showstartModal\" @close-modal=\"showstartModal = false\" titleText=\"호스트 공지사항\">\n            <content>\n              <div class=\"content\">\n                <p class=\"notice\">참여자들의 입장이 완료되면 반드시 <strong style=\"font-size: 24px\" id=\"notice\">시작</strong> 버튼을 눌러주세요.</p>\n                <p class=\"notice\">시작을 눌러야 미팅 중 다른 참여자들의 입장을 막을 수 있습니다.</p>\n              </div>\n              <customButton class=\"btn\" btnText=\"확인\" @click=\"showstartModal = false\"></customButton>\n            </content>\n          </custom-modal>\n        </div>\n      </div>\n    </div>\n    <loadingImg v-if=\"show_loadingimg\" :loadingText=\"loadingText\" />\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { mapActions } from \"vuex\";\nimport { OpenVidu } from \"openvidu-browser\";\nimport html2canvas from \"html2canvas\";\nimport AWS from \"aws-sdk\";\nimport mixin from \"@/components/videochat/colorPallete/mixin\";\nimport colorpallete from \"@/components/myPage/colorPallete.vue\";\nimport colorchoice from \"@/components/videochat/colorPallete/colorChoice.vue\";\nimport UserVideo from \"@/components/videochat/UserVideo.vue\";\nimport UserVideo_sub from \"@/components/videochat/UserVideo_sub.vue\";\nimport Chatpanel from \"@/components/videochat/chatPanel.vue\";\nimport loadingImg from \"../../components/Voting/loadingImg.vue\";\nimport swal from \"sweetalert\";\n\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nconst OPENVIDU_SERVER_URL = \"https://\" + location.hostname + \":40001\";\nconst OPENVIDU_SERVER_SECRET = \"i7b208\";\n\n// const OPENVIDU_SERVER_URL = \"https://\" + location.hostname + \":4443\";\n// const OPENVIDU_SERVER_SECRET = \"MY_SECRET\";\n\nexport default {\n  name: \"TeamMeeting\",\n  components: {\n    colorpallete,\n    colorchoice,\n    UserVideo,\n    UserVideo_sub,\n    Chatpanel,\n    loadingImg,\n  },\n  mixins: [mixin],\n  computed: {\n    rgba() {\n      return {\n        r: this.r,\n        g: this.g,\n        b: this.b,\n        a: this.a,\n      };\n    },\n    hsv() {\n      return {\n        h: this.h,\n        s: this.s,\n        v: this.v,\n      };\n    },\n    isChatPanel() {\n      return this.$store.getters.isChatPanel;\n    },\n    publishAudio() {\n      return this.$store.getters.getPublishAudio;\n    },\n    publishVideo() {\n      return this.$store.getters.getPublishVideo;\n    },\n  },\n  data() {\n    return {\n      OV: undefined,\n      session: true,\n      mainStreamManager: undefined,\n      publisher: undefined,\n      subscribers: [],\n      ishost: false,\n      mySessionId: sessionStorage.getItem(\"roomCode\"),\n      myUserName: JSON.parse(sessionStorage.getItem(\"memberData\")).data.nickname,\n      modelRgba: \"\",\n      modelHex: \"\",\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n      h: 0,\n      s: 0,\n      v: 0,\n      count_pallete: 0,\n      selectedColorLst: [\"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\"],\n      awsid: process.env.VUE_APP_AWS_IDENTITYPOOLID,\n      memberData: JSON.parse(sessionStorage.getItem(\"memberData\")).data,\n      roomHeaderTitle: \"\",\n      roomHeaderData: \"\",\n      ready: true,\n      readyAll: false,\n      readys: {},\n      numberOFparti: this.participantUpdate(this.mySessionId),\n      ishostCopy: false,\n      isTrackChanged: false,\n      isSave: true,\n      savings: {},\n      show_loadingimg: false,\n      loadingText: \"투표를 불러오는 중 입니다\",\n    };\n  },\n  created() {\n    Object.assign(this, this.setColorValue(this.color));\n    this.setText();\n    if (this.$store.state.meetingStore.roomType == \"group\") {\n      this.roomHeaderTitle = \"미팅 코드\";\n      this.roomHeaderData = sessionStorage.getItem(\"roomCode\");\n      this.myUserName = this.memberData.name;\n    } else if (this.$store.state.meetingStore.roomType == \"random\") {\n      this.roomHeaderTitle = \"미팅 주제\";\n      this.roomHeaderData = sessionStorage.getItem(\"toppicTitle\");\n      this.myUserName = this.memberData.nickname;\n    }\n  },\n  beforeMount() {\n    if (this.publishAudio) {\n      this.$store.commit(\"changePublishAudio\");\n    }\n    if (this.publishVideo) {\n      this.$store.commit(\"changePublishVideo\");\n    }\n    this.$store.commit(\"CLEAN_PALLETE\");\n    this.joinSession();\n  },\n  mounted() {\n    this.$store.state.resultStore.voteRound = 1;\n    console.log(sessionStorage.getItem(\"roomCode\"));\n    console.log(sessionStorage.getItem(\"roomId\"));\n    console.log(this.subscribers);\n    if (sessionStorage.getItem(\"hostId\") == sessionStorage.getItem(\"memberId\")) {\n      this.ishost = true;\n      swal(\"호스트 공지사항\", '참여자 입장이 완료되면 반드시 \"시작\" 버튼을 눌려주세요. \\n 미팅 진행 중 다른 참여자들의 입장을 막을 수 있습니다.', \"info\");\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    this.leaveSession();\n    sessionStorage.setItem(\"hostId\", -1);\n    setTimeout(() => {\n      next().then(() => this.$router.go());\n    }, 100);\n  },\n  methods: {\n    ...mapActions([\"toggleChatPanel\"]),\n    onLoadingImg() {\n      this.show_loadingimg = true;\n    },\n    offLoadingImg() {\n      this.show_loadingimg = false;\n    },\n    leaveMeeting() {\n      this.leaveSession();\n      this.$router.push(\"/enterPage\");\n    },\n    start() {\n      this.ishost = false;\n      this.ishostCopy = true;\n      let memberData = JSON.parse(sessionStorage.getItem(\"memberData\"));\n      let userid = memberData.data.id;\n      let roomnum = sessionStorage.getItem(\"roomId\");\n      console.log(roomnum);\n      axios\n        .put(this.$store.state.baseurl + \"room/status\", {\n          roomid: roomnum,\n          hostid: userid,\n        })\n        .then((response) => {\n          console.log(response);\n        });\n    },\n    // 선택한 색의 컬러코드를 store에 저장\n    showOneSelectedColor() {\n      if (this.count_pallete < 8) {\n        this.modelHex = this.rgb2hex(this.rgba, true);\n        console.log(this.modelHex);\n        var duplicated = 0;\n        console.log(this.$store.state.selectedColorLst);\n        for (var i = 0; i < this.count_pallete; i++) {\n          if (this.$store.state.selectedColorLst[i] == this.modelHex) {\n            swal(\"색상 담기\", \"중복된 색이 있습니다.\", \"error\");\n            duplicated = 1;\n          }\n        }\n        if (duplicated == 1) {\n          return;\n        }\n        this.$store.commit(\"NEW_COLOR\", { color: this.modelHex });\n        this.selectedColorLst = this.$store.state.selectedColorLst;\n        this.selectedColorLst.splice(this.count_pallete, 1, this.$store.state.storeselectedColor.color);\n        this.$store.state.selectedColorLst = this.selectedColorLst;\n\n        var name = this.modelHex.substr(1);\n        console.log(name);\n        var awsid = this.awsid;\n        var userid = sessionStorage.getItem(\"userId\");\n        var count = this.count_pallete;\n        html2canvas(document.getElementById(\"webcam\")).then(function (canvas) {\n          // document.getElementById(\"webcam\").appendChild(canvas);\n          var img = canvas.toDataURL(\"image/jpeg\");\n          console.log(img);\n\n          // base64 -> image file\n          var arr = img.split(\",\"),\n            mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]),\n            n = bstr.length,\n            u8arr = new Uint8Array(n);\n\n          while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n          }\n\n          var file = new File([u8arr], name, { type: mime });\n\n          console.log(file);\n\n          // s3 upload\n          AWS.config.update({\n            region: \"ap-northeast-2\",\n            credentials: new AWS.CognitoIdentityCredentials({\n              IdentityPoolId: awsid,\n            }),\n          });\n\n          var s3 = new AWS.S3({\n            apiVersion: \"2012-10-17\",\n            params: {\n              Bucket: \"ssafy7color\",\n            },\n          });\n\n          var date = new Date();\n          var yyyymmdd = date.getFullYear() + \"\" + (date.getMonth() + 1) + date.getDate();\n          var roomcode = sessionStorage.getItem(\"roomCode\");\n\n          let photoKey = yyyymmdd + \"/\" + userid + \"/\" + roomcode + \"/\" + name + count + \".jpg\";\n\n          s3.upload(\n            {\n              Key: photoKey,\n              Body: file,\n              ACL: \"public-read\",\n            },\n            (err, data) => {\n              if (err) {\n                console.log(err);\n              }\n              console.log(\"Successfully uploaded photo.\");\n              console.log(data);\n            }\n          );\n        });\n        // this.count++;\n        this.count_pallete++;\n      } else {\n        swal(\"색상 담기\", \"컬러 팔레트가 꽉찼습니다.\", \"error\");\n      }\n      setTimeout(() => {}, 500);\n    },\n\n    gosaving() {\n      this.$store.state.resultStore.cnt = this.numberOFparti;\n      var awsid = this.awsid;\n      var userid = sessionStorage.getItem(\"userId\");\n      // file 가져오기\n      AWS.config.update({\n        region: \"ap-northeast-2\",\n        credentials: new AWS.CognitoIdentityCredentials({\n          IdentityPoolId: awsid,\n        }),\n      });\n\n      var s3 = new AWS.S3({\n        apiVersion: \"2012-10-17\",\n        params: {\n          Bucket: \"ssafy7color\",\n        },\n      });\n\n      var date = new Date();\n      var yyyymmdd = date.getFullYear() + \"\" + (date.getMonth() + 1) + date.getDate();\n      var roomcode = sessionStorage.getItem(\"roomCode\");\n\n      let photoKey = yyyymmdd + \"/\" + userid + \"/\" + roomcode + \"/\";\n\n      console.log(photoKey);\n\n      s3.listObjects(\n        {\n          Delimiter: \"/\",\n          Prefix: photoKey,\n        },\n        (err, data) => {\n          if (err) {\n            return swal(\"투표하기\", \"There was an error : \" + err.message, \"error\");\n          } else {\n            var colorsets = [];\n            var colorset = { url: \"\", code: \"\" };\n            this.lists = data.Contents;\n            this.lists.forEach((list) => {\n              var imgurl = \"https://ssafy7color.s3.ap-northeast-2.amazonaws.com/\" + list.Key;\n              var colorcode = \"#\" + imgurl.slice(imgurl.length - 11, imgurl.length - 5);\n              // console.log(code);\n              colorset = { url: imgurl, code: colorcode };\n              colorsets.push(colorset);\n            });\n            console.log(colorsets);\n            // 미팅 정보 db 저장\n            let roomnum = sessionStorage.getItem(\"roomId\");\n            let memberData = JSON.parse(sessionStorage.getItem(\"memberData\"));\n            let userid = memberData.data.id;\n            const colorsetResult = {\n              roomid: roomnum,\n              userid: userid,\n              colorset: colorsets,\n            };\n            console.log(colorsetResult);\n            axios.post(this.$store.state.baseurl + \"room/result\", colorsetResult).then((response) => {\n              console.log(response);\n              this.doneSaving();\n            });\n          }\n        }\n      );\n    },\n\n    goVote() {\n      setTimeout(() => {\n        this.offLoadingImg();\n        if (this.$store.state.meetingStore.roomType == \"group\") {\n          this.$router.push(\"/teamVoting\");\n        } else if (this.$store.state.meetingStore.roomType == \"random\") {\n          this.$router.push(\"/randomVoting\");\n        }\n      }, 4000);\n    },\n    dataURLtoFile(dataurl, fileName) {\n      var arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], fileName, { type: mime });\n    },\n\n    setText() {\n      this.modelHex = this.rgb2hex(this.rgba, true);\n      this.modelRgba = `${this.r}, ${this.g}, ${this.b}, ${this.a}`;\n    },\n    changeColor(color) {\n      const { r, g, b, a, h, s, v } = this.setColorValue(color.rgba);\n      Object.assign(this, { r, g, b, a, h, s, v });\n      this.modelHex = color.hex;\n\n      this.$store.state.r = this.r;\n      this.$store.state.g = this.g;\n      this.$store.state.b = this.b;\n    },\n    sendMessage(message) {\n      var messageData = {\n        content: message,\n        secretName: this.myUserName,\n        // secretName: this.$storestate.userName,\n      };\n      this.session.signal({\n        type: \"chat\",\n        data: JSON.stringify(messageData),\n        to: [],\n      });\n    },\n    sendReconnect(connectionId) {\n      this.session.signal({\n        type: \"reconnect\",\n        to: [connectionId],\n      });\n    },\n    sendVote() {\n      var vote = this.ready;\n      // var name = this.myUserName;\n      // this.readys[name] = vote;\n      this.session.signal({\n        type: \"vote\",\n        data: JSON.stringify(vote),\n        to: [],\n      });\n      this.ready = !vote;\n    },\n    doneSaving() {\n      var saving = this.isSave;\n      this.session.signal({\n        type: \"saving\",\n        data: JSON.stringify(saving),\n        to: [],\n      });\n      this.isSave = !saving;\n    },\n    startVote() {\n      this.session.signal({\n        type: \"goVote\",\n        to: [],\n      });\n    },\n    startSaving() {\n      this.session.signal({\n        type: \"goSaving\",\n        to: [],\n      });\n    },\n    muteAudio() {\n      this.publisher.publishAudio(this.publishAudio);\n      console.log(this.publishAudio);\n      this.$store.commit(\"changePublishAudio\");\n    },\n    muteVideo() {\n      this.publisher.publishVideo(this.publishVideo);\n      this.$store.commit(\"changePublishVideo\");\n    },\n    changeStream() {\n      if (!this.isTrackChanged) {\n        const canvas = document.getElementById(\"overlay\");\n        const canvas_stream = canvas.captureStream();\n        var myTrack = canvas_stream.getVideoTracks()[0];\n        // Replacing video track\n        this.publisher\n          .replaceTrack(myTrack)\n          .then(() => {\n            console.log(\"New track has been published\");\n            this.isTrackChanged = true;\n          })\n          .catch((error) => console.error(\"Error replacing track\", error));\n      } else {\n        console.log(\"Already track has been changed\");\n      }\n    },\n    joinSession() {\n      // --- Get an OpenVidu object ---\n      this.OV = new OpenVidu();\n\n      // --- Init a session ---\n      this.session = this.OV.initSession();\n\n      // --- Specify the actions when events take place in the session ---\n\n      // On every new Stream received...\n      this.session.on(\"streamCreated\", ({ stream }) => {\n        const subscriber = this.session.subscribe(stream);\n        this.subscribers.push(subscriber);\n        setTimeout(() => {\n          this.participantUpdate(this.mySessionId);\n        }, 100);\n      });\n\n      // On every Stream destroyed...\n      this.session.on(\"streamDestroyed\", ({ stream }) => {\n        const index = this.subscribers.indexOf(stream.streamManager, 0);\n        if (index >= 0) {\n          this.subscribers.splice(index, 1);\n        }\n      });\n\n      // get signal for chat from everyone\n      this.session.on(\"signal:chat\", (event) => {\n        let eventData = JSON.parse(event.data);\n        let data = new Object();\n        data.message = eventData.content;\n        data.sender = event.from.data.slice(15, -2);\n        this.$store.commit(\"SET_MESSAGES\", data);\n      });\n\n      // get signal for ready to vote(on/off)(true/false)\n      this.session.on(\"signal:vote\", (event) => {\n        var voteData = JSON.parse(event.data);\n        var voteName = event.from.connectionId; // Connection object of the sender\n        this.readys[voteName] = voteData;\n        var readyNumber = Object.values(this.readys).filter((readyCheck) => true == readyCheck).length;\n        if (readyNumber == this.numberOFparti) {\n          console.log(\"Every People Ready to Vote\");\n          console.log(\"asfdjjsjfslkjflkjsflkjalkjslkjasfd\");\n          if (this.ishostCopy) {\n            this.readyAll = true;\n          }\n        } else {\n          this.readyAll = false;\n        }\n      });\n\n      this.session.on(\"signal:saving\", (event) => {\n        var savingData = JSON.parse(event.data);\n        var savingName = event.from.connectionId; // Connection object of the sender\n        console.log(event);\n        this.savings[savingName] = savingData;\n        var readyNumber = Object.values(this.savings).filter((readyCheck) => true == readyCheck).length;\n        if (readyNumber == this.numberOFparti) {\n          console.log(\"Every People Ready to saving\");\n          console.log(\"asfdjjsjfslkjflkjsflkjalkjslkjasfd\");\n          if (this.ishostCopy) {\n            setTimeout(() => {\n              this.startVote();\n            }, 1000);\n          }\n        }\n      });\n\n      // get signal for move to votePage\n      this.session.on(\"signal:goVote\", () => {\n        console.log(\"Start Vote\");\n        this.goVote();\n      });\n      this.session.on(\"signal:goSaving\", () => {\n        this.onLoadingImg();\n        console.log(\"Start Saving\");\n        this.gosaving();\n      });\n\n      // get signal that my video is not palyed on subscriber's page\n      this.session.on(\"signal:reconnect\", () => {\n        console.log(this.publisher);\n        console.log(this.mainStreamManager);\n        this.publisher.stream.reconnect();\n      });\n\n      // openvidu recommend for reconnecting video\n      this.session.on(\"reconnecting\", () => console.warn(\"Oops! Trying to reconnect to the session\"));\n      this.session.on(\"reconnected\", () => console.log(\"Hurray! You successfully reconnected to the session\"));\n      this.session.on(\"sessionDisconnected\", (event) => {\n        if (event.reason === \"networkDisconnect\") {\n          console.warn(\"Dang-it... You lost your connection to the session\");\n        }\n      });\n\n      // On every asynchronous exception...\n      this.session.on(\"exception\", (event) => {\n        if (event.name === \"ICE_CONNECTION_FAILED\") {\n          var stream = event.origin;\n          console.warn(\"Stream \" + stream.streamId + \" broke!\");\n          console.warn(\"Reconnection process automatically started\");\n        }\n        // if (event.name === \"ICE_CONNECTION_DISCONNECTED\") {\n        //   var stream_dis = event.origin;\n        //   console.warn(\"Stream \" + stream_dis.streamId + \" disconnected!\");\n        //   console.warn(\"Giving it some time to be restored. If not possible, reconnection process will start\");\n        // }\n        if (event.name == \"NO_STREAM_PLAYING_EVENT\") {\n          this.sendReconnect(event.origin.stream.connection.connectionId);\n        }\n        console.warn(event);\n      });\n\n      // --- Connect to the session with a valid user token ---\n\n      // 'getToken' method is simulating what your server-side should do.\n      // 'token' parameter should be retrieved and returned by your own backend\n      this.getToken(this.mySessionId).then((token) => {\n        this.session\n          .connect(token, { clientData: this.myUserName })\n          .then(() => {\n            // --- Get your own camera stream with the desired properties ---\n\n            let publisher = this.OV.initPublisher(undefined, {\n              audioSource: undefined, // The source of audio. If undefined default microphone\n              videoSource: undefined, // The source of video. If undefined default webcam\n              publishAudio: true, // Whether you want to start publishing with your audio unmuted or not\n              publishVideo: true, // Whether you want to start publishing with your video enabled or not\n              resolution: \"600x315\", // The resolution of your video\n              frameRate: 60, // The frame rate of your video\n              insertMode: \"APPEND\", // How the video is inserted in the target element 'video-container'\n              mirror: false, // Whether to mirror your local video or not\n            });\n\n            this.mainStreamManager = publisher;\n            this.publisher = publisher;\n\n            // --- Publish your stream ---\n\n            this.session.publish(this.publisher);\n          })\n          .catch((error) => {\n            console.log(\"There was an error connecting to the session:\", error.code, error.message);\n          });\n        console.log(this.getSession(this.mySessionId));\n      });\n\n      window.addEventListener(\"beforeunload\", this.leaveSession);\n    },\n    getSession(sessionId) {\n      axios\n        .get(`${OPENVIDU_SERVER_URL}/openvidu/api/sessions/${sessionId}`, {\n          auth: {\n            username: \"OPENVIDUAPP\",\n            password: OPENVIDU_SERVER_SECRET,\n          },\n        })\n        .then((response) => {\n          this.numberOFparti = response.data.connections.numberOfElements;\n          console.log(response);\n          console.log(response.data.connections.numberOfElements);\n          console.log(\"값확인이전\");\n          if (response.data.connections.numberOfElements > 6) {\n            console.log(\"값확인\");\n            let roomid = {\n              roomid: sessionStorage.getItem(\"roomId\"),\n            };\n            console.log(roomid);\n            this.leaveSession();\n            this.$store.dispatch(\"pullRoom\", roomid);\n          }\n        });\n      return this.numberOFparti;\n    },\n    participantUpdate(sessionId) {\n      axios\n        .get(`${OPENVIDU_SERVER_URL}/openvidu/api/sessions/${sessionId}`, {\n          auth: {\n            username: \"OPENVIDUAPP\",\n            password: OPENVIDU_SERVER_SECRET,\n          },\n        })\n        .then((response) => {\n          this.numberOFparti = response.data.connections.numberOfElements;\n          console.log(response);\n          console.log(response.data.connections.numberOfElements);\n          console.log(\"값확인이전\");\n        });\n      return this.numberOFparti;\n    },\n    leaveSession() {\n      // --- Leave the session by calling 'disconnect' method over the Session object --->\n      if (this.session) {\n        this.participantUpdate(this.mySessionId);\n        if (this.numberOFparti == 6) {\n          this.$store.dispatch(\"leaveSession\", this.mySessionId);\n        } else if (this.numberOFparti == 1) {\n          this.start();\n        }\n        this.session.disconnect();\n        this.session = undefined;\n        this.mainStreamManager = undefined;\n        this.publisher = undefined;\n        this.subscribers = [];\n        this.OV = undefined;\n        this.$store.commit(\"SET_CLEARMESSAGES\");\n      }\n      window.removeEventListener(\"beforeunload\", this.leaveSession);\n    },\n\n    updateMainVideoStreamManager(stream) {\n      if (this.mainStreamManager === stream) return;\n      this.mainStreamManager = stream;\n    },\n\n    /**\n     * --------------------------\n     * SERVER-SIDE RESPONSIBILITY\n     * --------------------------\n     * These methods retrieve the mandatory user token from OpenVidu Server.\n     * This behavior MUST BE IN YOUR SERVER-SIDE IN PRODUCTION (by using\n     * the API REST, openvidu-java-client or openvidu-node-client):\n     *   1) Initialize a Session in OpenVidu Server\t(POST /openvidu/api/sessions)\n     *   2) Create a Connection in OpenVidu Server (POST /openvidu/api/sessions/<SESSION_ID>/connection)\n     *   3) The Connection.token must be consumed in Session.connect() method\n     */\n\n    getToken(mySessionId) {\n      return this.createSession(mySessionId).then((sessionId) => this.createToken(sessionId));\n    },\n\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-session\n    createSession(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\n            `${OPENVIDU_SERVER_URL}/openvidu/api/sessions`,\n            JSON.stringify({\n              customSessionId: sessionId,\n            }),\n            {\n              auth: {\n                username: \"OPENVIDUAPP\",\n                password: OPENVIDU_SERVER_SECRET,\n              },\n            }\n          )\n          .then((response) => response.data)\n          .then((data) => resolve(data.id))\n          .catch((error) => {\n            if (error.response.status === 409) {\n              resolve(sessionId);\n            } else {\n              console.warn(`No connection to OpenVidu Server. This may be a certificate error at ${OPENVIDU_SERVER_URL}`);\n              if (\n                window.confirm(\n                  `No connection to OpenVidu Server. This may be a certificate error at ${OPENVIDU_SERVER_URL}\\n\\nClick OK to navigate and accept it. If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"${OPENVIDU_SERVER_URL}\"`\n                )\n              ) {\n                location.assign(`${OPENVIDU_SERVER_URL}/accept-certificate`);\n              }\n              reject(error.response);\n            }\n          });\n      });\n    },\n\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-connection\n    createToken(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\n            `${OPENVIDU_SERVER_URL}/openvidu/api/sessions/${sessionId}/connection`,\n            {},\n            {\n              auth: {\n                username: \"OPENVIDUAPP\",\n                password: OPENVIDU_SERVER_SECRET,\n              },\n            }\n          )\n          .then((response) => response.data)\n          .then((data) => resolve(data.token))\n          .catch((error) => reject(error.response));\n      });\n    },\n    exit() {\n      this.$router.push(\"/enterPage\");\n      // this.$router.go();\n    },\n  },\n};\n</script>\n\n<style scoped>\nhtml,\nbody {\n  height: 100vh;\n  overflow: hidden;\n}\n.contents {\n  display: flex;\n  margin-left: 120px;\n  height: 100vh;\n}\n.camera {\n  width: 157vh;\n  text-align: center;\n}\n.webcam {\n  display: inline-block;\n  width: 400px;\n  margin-top: 20px;\n  border-radius: 15px;\n  filter: drop-shadow(6px 6px 4px rgba(0, 0, 0, 0.25));\n}\n.name {\n  margin-top: 3px;\n  color: #434485;\n}\n.mute {\n  width: 150px;\n  height: 35px;\n  margin-right: 20px;\n}\n.muteActive {\n  background-color: #bcbdfc;\n}\n.videostop {\n  width: 150px;\n  height: 35px;\n  margin-top: 3px;\n}\n\n/* 참여자들 캠 */\n.anotherPerson {\n  margin-top: 15px;\n}\n.p_sub {\n  display: inline-block;\n}\n.webcam_sub {\n  width: 300px;\n  margin: 10px 20px 0px 20px;\n  border-radius: 15px;\n  filter: drop-shadow(6px 6px 4px rgba(0, 0, 0, 0.25));\n}\n\n/* 우측 사이드 바 */\n.rightPannelArea {\n  height: 100vh;\n}\n.rightSidebar {\n  height: 96%;\n  padding-bottom: 25px;\n  box-shadow: 5px 1px 40px rgba(168, 168, 168, 0.4);\n  text-align: center;\n  width: 40vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n.chatPanelArea {\n  width: 37vh;\n  /* height: 99%; */\n  box-shadow: 5px 1px 40px rgba(168, 168, 168, 0.4);\n}\n.title h3 {\n  display: flex;\n  text-align: left;\n  color: #6667ab;\n  margin: 0 0 10px 0;\n  padding-top: 15px;\n}\n\n.title > hr {\n  display: flex;\n  width: 24vh;\n  margin: 0;\n  border: 0;\n  height: 3px;\n  background: #d0d1ff;\n}\n\n.pallete {\n  display: inline-block;\n  margin-top: 10px;\n}\n\n.selectColor {\n  display: inline-block;\n  margin-top: 15px;\n}\n\n.selectColorbtn {\n  width: 180px;\n  margin-top: 10px;\n}\n\n.code {\n  margin: 8px;\n}\n\n.btn {\n  width: 190px;\n  margin-top: 7px;\n}\n/* our */\n#local-video-undefined {\n  width: 20vh;\n}\n.notice {\n  font-size: 20px;\n  margin: 20px 10px 20px 10px;\n  color: #6667ab;\n}\n#notice {\n  color: #f34d75;\n}\n.content {\n  margin: 80px 0px 70px 0px;\n}\n.br {\n  margin: 10px;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TeamView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./TeamView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TeamView.vue?vue&type=template&id=46c58410&scoped=true&\"\nimport script from \"./TeamView.vue?vue&type=script&lang=js&\"\nexport * from \"./TeamView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TeamView.vue?vue&type=style&index=0&id=46c58410&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"46c58410\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","mainStreamManager","on","changeStream","_v","_s","myUserName","class","muteActive","publishAudio","muteAudio","publishVideo","muteVideo","_l","subscribers","sub","key","stream","connection","connectionId","nativeOn","$event","updateMainVideoStreamManager","isChatPanel","sendMessage","_e","_m","changeColor","ref","showOneSelectedColor","roomHeaderTitle","roomHeaderData","toggleChatPanel","ready","sendVote","ishostCopy","readyAll","startSaving","ishost","start","leaveMeeting","directives","name","rawName","value","showstartModal","expression","staticStyle","show_loadingimg","loadingText","staticRenderFns","streamManager","clientData","props","mounted","component","components","OvVideo","computed","methods","getConnectionData","messages","message","i","sender","domProps","type","indexOf","_k","keyCode","clickSendMessage","apply","arguments","target","composing","data","chatHeight","watch","setTimeout","chatDiv","top","behavior","axios","OPENVIDU_SERVER_URL","location","hostname","OPENVIDU_SERVER_SECRET","colorpallete","colorchoice","UserVideo","UserVideo_sub","Chatpanel","loadingImg","mixins","rgba","r","g","b","a","hsv","h","s","v","OV","session","publisher","mySessionId","modelRgba","modelHex","count_pallete","selectedColorLst","awsid","memberData","readys","numberOFparti","isTrackChanged","isSave","savings","created","Object","beforeMount","console","swal","beforeRouteLeave","sessionStorage","next","onLoadingImg","offLoadingImg","roomid","hostid","then","response","duplicated","color","html2canvas","mime","bstr","n","u8arr","AWS","region","credentials","IdentityPoolId","apiVersion","params","Bucket","s3","Key","Body","ACL","gosaving","Delimiter","Prefix","url","code","colorset","colorsets","userid","goVote","dataURLtoFile","setText","content","secretName","to","sendReconnect","doneSaving","startVote","replaceTrack","myTrack","catch","error","joinSession","connect","token","audioSource","videoSource","resolution","frameRate","insertMode","mirror","window","getSession","auth","username","password","participantUpdate","leaveSession","getToken","createSession","JSON","customSessionId","resolve","reject","createToken","exit"],"sourceRoot":""}