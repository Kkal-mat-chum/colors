{"version":3,"file":"js/569.7207c47c.js","mappings":"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","sources":["webpack://colors/./src/views/MeetingView/AloneView.vue","webpack://colors/./src/components/videochat/webcamStream.vue","webpack://colors/src/components/videochat/webcamStream.vue","webpack://colors/./src/components/videochat/webcamStream.vue?ff7a","webpack://colors/./src/components/videochat/webcamStream.vue?6862","webpack://colors/src/views/MeetingView/AloneView.vue","webpack://colors/./src/views/MeetingView/AloneView.vue?4857","webpack://colors/./src/views/MeetingView/AloneView.vue?cb56"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"aloneMeeting\"},[_c('div',{staticClass:\"contents\"},[_c('div',{staticClass:\"camera\"},[_c('webcam',{ref:\"camStream\",attrs:{\"id\":\"webcam\"}}),_c('div',{staticClass:\"buttons\"},[_c('customButton',{staticClass:\"mute\",class:{ muteActive: _vm.publishAudio },attrs:{\"btnText\":\"음소거\"},on:{\"click\":_vm.muteAudio}}),_c('customButton',{staticClass:\"videostop\",class:{ muteActive: _vm.publishVideo },attrs:{\"btnText\":\"비디오 중지\"},on:{\"click\":_vm.muteVideo}})],1)],1),_c('div',{staticClass:\"rightSidebar\"},[_vm._m(0),_c('colorpallete',{staticClass:\"pallete\"}),_c('div',{staticClass:\"selectColor\"},[_c('colorchoice',{on:{\"changeColor\":_vm.changeColor}})],1),_c('customButton',{ref:\"colorchoice\",staticClass:\"selectColorbtn\",attrs:{\"btnText\":\"색상 팔레트에 담기\"},on:{\"click\":_vm.showOneSelectedColor}}),_c('customButton',{staticClass:\"votebtn\",attrs:{\"btnText\":\"투표하기\"},on:{\"click\":_vm.goVote}}),_c('customButton',{staticClass:\"exitbtn\",attrs:{\"btnText\":\"종료\"},on:{\"click\":_vm.exit}}),_c('custom-modal',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showModal),expression:\"showModal\"}],staticClass:\"updateUserProfileModal\",attrs:{\"id\":\"updateUserProfileModal\",\"titleText\":\"투표 방식 선택\"},on:{\"close-modal\":function($event){_vm.showModal = false}}},[_c('cotent',[_c('div',{staticClass:\"vote\"},[_c('div',[_c('customButton',{staticClass:\"selectVotebtn\",attrs:{\"btnText\":\"토너먼트 형식으로 투표하기\"},on:{\"click\":_vm.goton}})],1),_c('div',[_c('customButton',{staticClass:\"selectVotebtn\",attrs:{\"btnText\":\"베스트 원픽 투표하기\"},on:{\"click\":_vm.gobest}})],1),_c('div',{staticClass:\"coment\"},[_vm._v(\"토너먼트 형식 : 8강전부터 베스트 컬러 선택 \"),_c('br'),_vm._v(\"베스트 원픽 : 8개의 컬러 중 베스트 컬러 선택\")])])])],1)],1)])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"title\"},[_c('h2',[_vm._v(\"나만의 색상 팔레트\")]),_c('hr')])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return (_vm.session)?_c('div',{attrs:{\"id\":\"session\"}},[_c('div',{staticClass:\"col-md-6\",attrs:{\"id\":\"main-video\"}},[_c('user-video',{attrs:{\"stream-manager\":_vm.mainStreamManager}})],1)]):_vm._e()\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"session\" v-if=\"session\">\n    <div id=\"main-video\" class=\"col-md-6\">\n      <user-video :stream-manager=\"mainStreamManager\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { OpenVidu } from \"openvidu-browser\";\nimport UserVideo from \"./UserVideo\";\n\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\nconst OPENVIDU_SERVER_URL = \"https://\" + location.hostname + \":40001\";\nconst OPENVIDU_SERVER_SECRET = \"i7b208\";\n\n// const OPENVIDU_SERVER_URL = \"https://\" + location.hostname + \":4443\";\n// const OPENVIDU_SERVER_SECRET = \"MY_SECRET\";\n\nexport default {\n  name: \"App\",\n\n  components: {\n    UserVideo,\n  },\n\n  data() {\n    return {\n      OV: undefined,\n      session: true,\n      mainStreamManager: undefined,\n      publisher: undefined,\n      subscribers: [],\n\n      mySessionId: sessionStorage.getItem(\"sessionCode\"),\n      myUserName: \"Participant\" + Math.floor(Math.random() * 100),\n    };\n  },\n  computed: {\n    publishAudio() {\n      return this.$store.getters.getPublishAudio;\n    },\n    publishVideo() {\n      return this.$store.getters.getPublishVideo;\n    },\n  },\n  beforeMount() {\n    if (this.publishAudio) {\n      this.$store.commit(\"changePublishAudio\");\n    }\n    if (this.publishVideo) {\n      this.$store.commit(\"changePublishVideo\");\n    }\n    this.joinSession();\n  },\n\n  methods: {\n    muteAudio() {\n      this.publisher.publishAudio(this.publishAudio);\n      console.log(this.publishAudio);\n      this.$store.commit(\"changePublishAudio\");\n    },\n    muteVideo() {\n      this.publisher.publishVideo(this.publishVideo);\n      this.$store.commit(\"changePublishVideo\");\n    },\n    joinSession() {\n      // --- Get an OpenVidu object ---\n      this.OV = new OpenVidu();\n\n      // --- Init a session ---\n      this.session = this.OV.initSession();\n\n      // --- Specify the actions when events take place in the session ---\n\n      // On every new Stream received...\n      this.session.on(\"streamCreated\", ({ stream }) => {\n        const subscriber = this.session.subscribe(stream);\n        this.subscribers.push(subscriber);\n      });\n\n      // On every Stream destroyed...\n      this.session.on(\"streamDestroyed\", ({ stream }) => {\n        const index = this.subscribers.indexOf(stream.streamManager, 0);\n        if (index >= 0) {\n          this.subscribers.splice(index, 1);\n        }\n      });\n\n      // On every asynchronous exception...\n      this.session.on(\"exception\", ({ exception }) => {\n        console.warn(exception);\n      });\n\n      // --- Connect to the session with a valid user token ---\n\n      // 'getToken' method is simulating what your server-side should do.\n      // 'token' parameter should be retrieved and returned by your own backend\n      this.getToken(this.mySessionId).then((token) => {\n        this.session\n          .connect(token, { clientData: this.myUserName })\n          .then(() => {\n            // --- Get your own camera stream with the desired properties ---\n\n            let publisher = this.OV.initPublisher(undefined, {\n              audioSource: undefined, // The source of audio. If undefined default microphone\n              videoSource: undefined, // The source of video. If undefined default webcam\n              publishAudio: true, // Whether you want to start publishing with your audio unmuted or not\n              publishVideo: true, // Whether you want to start publishing with your video enabled or not\n              resolution: \"800x420\", // The resolution of your video\n              frameRate: 30, // The frame rate of your video\n              insertMode: \"APPEND\", // How the video is inserted in the target element 'video-container'\n              mirror: false, // Whether to mirror your local video or not\n            });\n\n            this.mainStreamManager = publisher;\n            this.publisher = publisher;\n\n            // --- Publish your stream ---\n\n            this.session.publish(this.publisher);\n          })\n          .catch((error) => {\n            console.log(\"There was an error connecting to the session:\", error.code, error.message);\n          });\n      });\n\n      window.addEventListener(\"beforeunload\", this.leaveSession);\n    },\n\n    leaveSession() {\n      // --- Leave the session by calling 'disconnect' method over the Session object ---\n      if (this.session) {\n        this.session.disconnect();\n        console.log(\"session disconnected\");\n      }\n\n      this.session = undefined;\n      this.mainStreamManager = undefined;\n      this.publisher = undefined;\n      this.subscribers = [];\n      this.OV = undefined;\n\n      window.removeEventListener(\"beforeunload\", this.leaveSession);\n    },\n\n    updateMainVideoStreamManager(stream) {\n      if (this.mainStreamManager === stream) return;\n      this.mainStreamManager = stream;\n    },\n\n    /**\n     * --------------------------\n     * SERVER-SIDE RESPONSIBILITY\n     * --------------------------\n     * These methods retrieve the mandatory user token from OpenVidu Server.\n     * This behavior MUST BE IN YOUR SERVER-SIDE IN PRODUCTION (by using\n     * the API REST, openvidu-java-client or openvidu-node-client):\n     *   1) Initialize a Session in OpenVidu Server\t(POST /openvidu/api/sessions)\n     *   2) Create a Connection in OpenVidu Server (POST /openvidu/api/sessions/<SESSION_ID>/connection)\n     *   3) The Connection.token must be consumed in Session.connect() method\n     */\n\n    getToken(mySessionId) {\n      return this.createSession(mySessionId).then((sessionId) => this.createToken(sessionId));\n    },\n\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-session\n    createSession(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\n            `${OPENVIDU_SERVER_URL}/openvidu/api/sessions`,\n            JSON.stringify({\n              customSessionId: sessionId,\n            }),\n            {\n              auth: {\n                username: \"OPENVIDUAPP\",\n                password: OPENVIDU_SERVER_SECRET,\n              },\n            }\n          )\n          .then((response) => response.data)\n          .then((data) => resolve(data.id))\n          .catch((error) => {\n            if (error.response.status === 409) {\n              resolve(sessionId);\n            } else {\n              console.warn(`No connection to OpenVidu Server. This may be a certificate error at ${OPENVIDU_SERVER_URL}`);\n              if (\n                window.confirm(\n                  `No connection to OpenVidu Server. This may be a certificate error at ${OPENVIDU_SERVER_URL}\\n\\nClick OK to navigate and accept it. If no certificate warning is shown, then check that your OpenVidu Server is up and running at \"${OPENVIDU_SERVER_URL}\"`\n                )\n              ) {\n                location.assign(`${OPENVIDU_SERVER_URL}/accept-certificate`);\n              }\n              reject(error.response);\n            }\n          });\n      });\n    },\n\n    // See https://docs.openvidu.io/en/stable/reference-docs/REST-API/#post-connection\n    createToken(sessionId) {\n      return new Promise((resolve, reject) => {\n        axios\n          .post(\n            `${OPENVIDU_SERVER_URL}/openvidu/api/sessions/${sessionId}/connection`,\n            {},\n            {\n              auth: {\n                username: \"OPENVIDUAPP\",\n                password: OPENVIDU_SERVER_SECRET,\n              },\n            }\n          )\n          .then((response) => response.data)\n          .then((data) => resolve(data.token))\n          .catch((error) => reject(error.response));\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* our */\n#local-video-undefined {\n  width: 20vh;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./webcamStream.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./webcamStream.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./webcamStream.vue?vue&type=template&id=adfefee4&scoped=true&\"\nimport script from \"./webcamStream.vue?vue&type=script&lang=js&\"\nexport * from \"./webcamStream.vue?vue&type=script&lang=js&\"\nimport style0 from \"./webcamStream.vue?vue&type=style&index=0&id=adfefee4&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"adfefee4\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"aloneMeeting\">\n    <div class=\"contents\">\n      <div class=\"camera\">\n        <webcam id=\"webcam\" ref=\"camStream\"></webcam>\n        <div class=\"buttons\">\n          <customButton class=\"mute\" :class=\"{ muteActive: publishAudio }\" btnText=\"음소거\" @click=\"muteAudio\"></customButton>\n          <customButton class=\"videostop\" :class=\"{ muteActive: publishVideo }\" btnText=\"비디오 중지\" @click=\"muteVideo\"></customButton>\n        </div>\n      </div>\n      <div class=\"rightSidebar\">\n        <div class=\"title\">\n          <h2>나만의 색상 팔레트</h2>\n          <hr />\n        </div>\n        <colorpallete class=\"pallete\"></colorpallete>\n        <div class=\"selectColor\">\n          <colorchoice @changeColor=\"changeColor\"></colorchoice>\n        </div>\n        <customButton class=\"selectColorbtn\" btnText=\"색상 팔레트에 담기\" ref=\"colorchoice\" @click=\"showOneSelectedColor\"></customButton>\n        <customButton class=\"votebtn\" btnText=\"투표하기\" @click=\"goVote\"></customButton>\n        <customButton class=\"exitbtn\" btnText=\"종료\" @click=\"exit\"></customButton>\n        <custom-modal class=\"updateUserProfileModal\" id=\"updateUserProfileModal\" v-show=\"showModal\" @close-modal=\"showModal = false\" titleText=\"투표 방식 선택\">\n          <cotent>\n            <div class=\"vote\">\n              <div>\n                <customButton class=\"selectVotebtn\" btnText=\"토너먼트 형식으로 투표하기\" @click=\"goton\"></customButton>\n              </div>\n              <div>\n                <customButton class=\"selectVotebtn\" btnText=\"베스트 원픽 투표하기\" @click=\"gobest\"></customButton>\n              </div>\n              <div class=\"coment\">토너먼트 형식 : 8강전부터 베스트 컬러 선택 <br />베스트 원픽 : 8개의 컬러 중 베스트 컬러 선택</div>\n            </div>\n          </cotent>\n        </custom-modal>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport mixin from \"@/components/videochat/colorPallete/mixin\";\nimport webcam from \"@/components/videochat/webcamStream.vue\";\nimport colorpallete from \"@/components/myPage/colorPallete.vue\";\nimport colorchoice from \"@/components/videochat/colorPallete/colorChoice.vue\";\nimport html2canvas from \"html2canvas\";\nimport AWS from \"aws-sdk\";\nimport axios from \"axios\";\nimport router from \"@/router\";\nimport swal from \"sweetalert\";\n\nexport default {\n  name: \"aloneMeeting\",\n  components: {\n    webcam,\n    colorpallete,\n    colorchoice,\n  },\n  mixins: [mixin],\n  data() {\n    return {\n      modelRgba: \"\",\n      modelHex: \"\",\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 1,\n      h: 0,\n      s: 0,\n      v: 0,\n      count_pallete: 0,\n      selectedColorLst: [\"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\", \"#000000\"],\n      awsid: process.env.VUE_APP_AWS_IDENTITYPOOLID,\n      showModal: false,\n    };\n  },\n  mounted() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 1;\n    this.$store.state.resultStore.voteRound = 1;\n    let memberData = JSON.parse(sessionStorage.getItem(\"memberData\"));\n    let userid = memberData.data.id;\n    let roomnum = sessionStorage.getItem(\"roomId\");\n    console.log(roomnum);\n    axios\n      .put(this.$store.state.baseurl + \"room/status\", {\n        roomid: roomnum,\n        hostid: userid,\n      })\n      .then((response) => {\n        console.log(response);\n      });\n  },\n  computed: {\n    rgba() {\n      return {\n        r: this.r,\n        g: this.g,\n        b: this.b,\n        a: this.a,\n      };\n    },\n    hsv() {\n      return {\n        h: this.h,\n        s: this.s,\n        v: this.v,\n      };\n    },\n    publishAudio() {\n      return this.$store.getters.getPublishAudio;\n    },\n    publishVideo() {\n      return this.$store.getters.getPublishVideo;\n    },\n  },\n  created() {\n    Object.assign(this, this.setColorValue(this.color));\n    this.setText();\n\n    this.$watch(\"rgba\", () => {\n      this.$emit(\"changeColor\", {\n        rgba: this.rgba,\n        hsv: this.hsv,\n        hex: this.modelHex,\n      });\n    });\n  },\n  beforeRouteLeave(to, from, next) {\n    this.$refs.camStream.leaveSession();\n    setTimeout(() => {\n      next();\n      this.$router.go();\n    }, 100);\n  },\n  methods: {\n    goton() {\n      router.push(\"/aloneTournament\");\n    },\n    gobest() {\n      router.push(\"/aloneVoting\");\n    },\n    muteAudio() {\n      console.log(this.publishAudio);\n      this.$refs.camStream.muteAudio();\n    },\n    muteVideo() {\n      this.$refs.camStream.muteVideo();\n    },\n    // 선택한 색의 컬러코드를 store에 저장\n    showOneSelectedColor() {\n      if (this.count_pallete < 8) {\n        this.modelHex = this.rgb2hex(this.rgba, true);\n        var duplicated = 0;\n        console.log(this.$store.state.selectedColorLst);\n        for (var i = 0; i < this.count_pallete; i++) {\n          if (this.$store.state.selectedColorLst[i] == this.modelHex) {\n            swal(\"색상 담기\", \"중복된 색이 있습니다.\", \"error\");\n            duplicated = 1;\n          }\n        }\n        if (duplicated == 1) {\n          return;\n        }\n        console.log(this.modelHex);\n        this.$store.commit(\"NEW_COLOR\", { color: this.modelHex });\n        this.selectedColorLst = this.$store.state.selectedColorLst;\n        this.selectedColorLst.splice(this.count_pallete, 1, this.$store.state.storeselectedColor.color);\n        this.$store.state.selectedColorLst = this.selectedColorLst;\n\n        var name = this.modelHex.substr(1);\n        console.log(name);\n        var awsid = this.awsid;\n        var userid = sessionStorage.getItem(\"userId\");\n        var count = this.count_pallete;\n        html2canvas(document.getElementById(\"webcam\")).then(function (canvas) {\n          // document.getElementById(\"webcam\").appendChild(canvas);\n          var img = canvas.toDataURL(\"image/jpeg\");\n\n          // base64 -> image file\n          var arr = img.split(\",\"),\n            mime = arr[0].match(/:(.*?);/)[1],\n            bstr = atob(arr[1]),\n            n = bstr.length,\n            u8arr = new Uint8Array(n);\n\n          while (n--) {\n            u8arr[n] = bstr.charCodeAt(n);\n          }\n\n          var file = new File([u8arr], name, { type: mime });\n\n          console.log(file);\n\n          // s3 upload\n          AWS.config.update({\n            region: \"ap-northeast-2\",\n            credentials: new AWS.CognitoIdentityCredentials({\n              IdentityPoolId: awsid,\n            }),\n          });\n\n          var s3 = new AWS.S3({\n            apiVersion: \"2012-10-17\",\n            params: {\n              Bucket: \"ssafy7color\",\n            },\n          });\n\n          var date = new Date();\n          var yyyymmdd = date.getFullYear() + \"\" + (date.getMonth() + 1) + date.getDate();\n          var roomcode = sessionStorage.getItem(\"roomCode\");\n\n          let photoKey = yyyymmdd + \"/\" + userid + \"/\" + roomcode + \"/\" + name + count + \".jpg\";\n\n          s3.upload(\n            {\n              Key: photoKey,\n              Body: file,\n              ACL: \"public-read\",\n            },\n            (err, data) => {\n              if (err) {\n                console.log(err);\n              }\n              console.log(\"Successfully uploaded photo.\");\n              console.log(data);\n            }\n          );\n        });\n        // this.count++;\n        this.count_pallete++;\n      } else {\n        swal(\"색상 담기\", \"컬러 팔레트가 꽉찼습니다.\", \"error\");\n      }\n    },\n\n    goVote() {\n      var awsid = this.awsid;\n      var userid = sessionStorage.getItem(\"userId\");\n      // file 가져오기\n      AWS.config.update({\n        region: \"ap-northeast-2\",\n        credentials: new AWS.CognitoIdentityCredentials({\n          IdentityPoolId: awsid,\n        }),\n      });\n\n      var s3 = new AWS.S3({\n        apiVersion: \"2012-10-17\",\n        params: {\n          Bucket: \"ssafy7color\",\n        },\n      });\n\n      var date = new Date();\n      var yyyymmdd = date.getFullYear() + \"\" + (date.getMonth() + 1) + date.getDate();\n      var roomcode = sessionStorage.getItem(\"roomCode\");\n\n      let photoKey = yyyymmdd + \"/\" + userid + \"/\" + roomcode + \"/\";\n\n      console.log(photoKey);\n\n      s3.listObjects(\n        {\n          Delimiter: \"/\",\n          Prefix: photoKey,\n        },\n        (err, data) => {\n          if (err) {\n            return swal(\"투표하기\", \"There was an error : \" + err.message, \"error\");\n          } else {\n            var colorsets = [];\n            var colorset = { url: \"\", code: \"\" };\n            this.lists = data.Contents;\n            this.lists.forEach((list) => {\n              var imgurl = \"https://ssafy7color.s3.ap-northeast-2.amazonaws.com/\" + list.Key;\n              var colorcode = \"#\" + imgurl.slice(imgurl.length - 11, imgurl.length - 5);\n              // console.log(code);\n              colorset = { url: imgurl, code: colorcode };\n              colorsets.push(colorset);\n            });\n            console.log(colorsets);\n            // 미팅 정보 db 저장\n            let roomnum = sessionStorage.getItem(\"roomId\");\n            let memberData = JSON.parse(sessionStorage.getItem(\"memberData\"));\n            let userid = memberData.data.id;\n            const colorsetResult = {\n              roomid: roomnum,\n              userid: userid,\n              colorset: colorsets,\n            };\n            console.log(colorsetResult);\n            axios.post(this.$store.state.baseurl + \"room/result\", colorsetResult).then((response) => {\n              console.log(response);\n            });\n          }\n        }\n      );\n      this.showModal = true;\n    },\n\n    dataURLtoFile(dataurl, fileName) {\n      var arr = dataurl.split(\",\"),\n        mime = arr[0].match(/:(.*?);/)[1],\n        bstr = atob(arr[1]),\n        n = bstr.length,\n        u8arr = new Uint8Array(n);\n\n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n\n      return new File([u8arr], fileName, { type: mime });\n    },\n\n    setText() {\n      this.modelHex = this.rgb2hex(this.rgba, true);\n      this.modelRgba = `${this.r}, ${this.g}, ${this.b}, ${this.a}`;\n    },\n    changeColor(color) {\n      const { r, g, b, a, h, s, v } = this.setColorValue(color.rgba);\n      Object.assign(this, { r, g, b, a, h, s, v });\n      this.modelHex = color.hex;\n\n      this.$store.state.r = this.r;\n      this.$store.state.g = this.g;\n      this.$store.state.b = this.b;\n    },\n    exit() {\n      this.$router.push(\"/enterPage\");\n      // this.$router.go();\n    },\n  },\n};\n</script>\n\n<style scoped>\nhtml,\nbody {\n  height: 100vh;\n  overflow: hidden;\n}\n.vote {\n  margin-top: 60px;\n}\n.selectVotebtn {\n  height: 50px;\n  width: 70%;\n  margin-top: 20px;\n}\n.coment {\n  text-align: right;\n  margin-top: 10%;\n  margin-right: 20px;\n  color: darkgray;\n}\n.contents {\n  display: flex;\n  margin-left: 120px;\n  height: 100vh;\n}\n.camera {\n  width: 157vh;\n  text-align: center;\n}\n#webcam {\n  display: inline-block;\n  width: 600px;\n  height: 300px;\n  margin-top: 150px;\n  filter: drop-shadow(6px 6px 4px rgba(0, 0, 0, 0.25));\n}\n.buttons {\n  margin-top: 50px;\n}\n.muteActive {\n  background-color: #bcbdfc;\n}\n.mute {\n  width: 150px;\n  margin-right: 20px;\n}\n.videostop {\n  width: 150px;\n}\n.rightSidebar {\n  width: 40vh;\n  height: 100vh;\n  box-shadow: 5px 1px 40px rgba(168, 168, 168, 0.4);\n  text-align: center;\n}\n.title {\n  margin-left: 50px;\n}\n.title h2 {\n  display: flex;\n  text-align: left;\n  color: #6667ab;\n  margin: 30px 0 10px 0;\n}\n\n.title > hr {\n  display: flex;\n  width: 200px;\n  margin: 0;\n  border: 0;\n  height: 3px;\n  background: #d0d1ff;\n}\n\n.pallete {\n  display: inline-block;\n  margin-top: 20px;\n}\n\n.selectColor {\n  display: inline-block;\n  background-color: #d0d1ff;\n  margin-top: 25px;\n}\n\n.selectColorbtn {\n  width: 200px;\n  margin-top: 20px;\n}\n\n.votebtn {\n  margin-top: 60px;\n  width: 200px;\n}\n.exitbtn {\n  width: 200px;\n  margin-top: 10px;\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AloneView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AloneView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AloneView.vue?vue&type=template&id=48d14c03&scoped=true&\"\nimport script from \"./AloneView.vue?vue&type=script&lang=js&\"\nexport * from \"./AloneView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AloneView.vue?vue&type=style&index=0&id=48d14c03&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"48d14c03\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","ref","attrs","class","muteActive","publishAudio","on","muteAudio","publishVideo","muteVideo","_m","changeColor","showOneSelectedColor","goVote","exit","directives","name","rawName","value","showModal","expression","$event","goton","gobest","_v","staticRenderFns","session","mainStreamManager","_e","axios","OPENVIDU_SERVER_URL","location","hostname","OPENVIDU_SERVER_SECRET","components","UserVideo","data","OV","publisher","subscribers","mySessionId","myUserName","computed","beforeMount","methods","console","joinSession","stream","exception","connect","token","clientData","then","audioSource","videoSource","resolution","frameRate","insertMode","mirror","catch","error","window","leaveSession","updateMainVideoStreamManager","getToken","createSession","JSON","customSessionId","auth","username","password","response","resolve","reject","createToken","component","webcam","colorpallete","colorchoice","mixins","modelRgba","modelHex","r","g","b","a","h","s","v","count_pallete","selectedColorLst","awsid","mounted","roomid","hostid","rgba","hsv","created","Object","hex","beforeRouteLeave","setTimeout","next","router","swal","duplicated","color","html2canvas","mime","bstr","n","u8arr","type","AWS","region","credentials","IdentityPoolId","apiVersion","params","Bucket","s3","Key","Body","ACL","Delimiter","Prefix","url","code","colorset","colorsets","userid","dataURLtoFile","setText"],"sourceRoot":""}